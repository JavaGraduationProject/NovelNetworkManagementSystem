function PubNovel(){}PubNovel.prototype.listenUploadFileEvent=function(){$("#thumbnail-btn").change(function(){var e=$(this)[0].files[0],t=new FormData;t.append("image",e),myajax.post({url:"/account/upload_file/",data:t,processData:!1,contentType:!1,success:function(e){var t;200===e.code&&(t=e.data.url,$("#cover_url-form").val(t))}})})},PubNovel.prototype.handleFileUploadProgress=function(e){var t=e.total.percent.toFixed(0)+"%";PubNovel.progressGroup.show();var a=PubNovel.progressBar;a.css("width",t),a.text(t)},PubNovel.prototype.handleFileUploadError=function(e){PubNovel.progressGroup.hide(),console.log(result.message)},PubNovel.prototype.handleFileUploadComplete=function(e){PubNovel.progressGroup.hide();var t="http://q0i4557d7.bkt.clouddn.com/"+e.key;$("input[name='thumbnail']").val(t)},PubNovel.prototype.listenQiniuUploadFileEvent=function(){var p=this;$("#thumbnail-btn").change(function(){var l=this.files[0];myajax.get({url:"/cms/qntoken/",success:function(e){var t,a,n,o,i,r;200===e.code&&(t=e.data.token,n={fname:a=(new Date).getTime()+"."+l.name.split(".")[1],params:{},mimeType:["image/png","image/jpeg","image/gif","video/mp4"]},o={useCdnDomain:!0,retryCount:6,region:qiniu.region.z1},i=qiniu.upload(l,a,t,n,o),r={next:p.handleFileUploadProgress,error:p.handleFileUploadError,complete:p.handleFileUploadComplete},i.subscribe(r))}})})},PubNovel.prototype.listenSubmitEvent=function(){$("#submit-btn").click(function(){event.preventDefault();var a=$(this).attr("data-novel-id"),e=$("input[name='name']").val(),t=$("input[name='cover_url']").val(),n=$("select[name='category_id']").val(),o=$('input[name="tag_id"]:checked').val(),i=$("input[name='price']").val().trim(),r=window.ue.getContent(),l="",l=a?"/account/update_novel/":"/account/add_novel/";myajax.post({url:l,data:{name:e,cover_url:t,category_id:n,tag_id:o,profile:r,price:i,id:a},success:function(e){var t;200===e.code?(t="",t=a?"恭喜，小说编辑成功！":"恭喜，小说发布成功！",xfzalert.alertSuccess(t,function(){window.location="/account/novel_list/"})):console.log(e)}})})},PubNovel.prototype.listenIsFreeEvent=function(){var e=$("select[name='is_free']"),t=$("input[name='price']");"1"===e.val()&&t.show(),e.change(function(){"0"===$(this).val()?(t.val(0),t.hide()):"1"===$(this).val()&&(t.val(0),t.show())}),t.change(function(){"0"===$(this).val()&&(e.children().eq(0).prop("selected","selected"),$(this).hide())})},PubNovel.prototype.initUEditor=function(){window.ue=UE.getEditor("editor",{initialFrameHeight:400,serverUrl:"/ueditor/upload/"})},PubNovel.prototype.initCategory=function(){var u=$("#category-form"),s=(s=u.attr("data-category-id"))?parseInt(s):1,d=$(".radio-group"),c=(c=d.attr("data-tag-id"))&&parseInt(c);myajax.get({url:"/account/get_cate_list/",success:function(e){if(200===e.code){var l=e.data.cate_list;for(var t in l){var a=l[t];s&&s===a.id?u.append('<option value="'+a.id+'" selected>'+a.name+"</option>"):u.append('<option value="'+a.id+'">'+a.name+"</option>")}for(var t in l)if(s===l[t].id){var n=l[t].tags;for(var o in n){var i=n[o],r=$('<label class="radio-inline"></label>'),p="",p=c&&c===i.id?$('<input type="radio" name="tag_id" value="'+i.id+'" checked>'):$('<input type="radio" name="tag_id" value="'+i.id+'">');r.append(p),r.append(" "+i.name),d.append(r)}break}u.change(function(){d.empty();var e=parseInt($(this).val());for(var t in l)if(e===l[t].id){var a=l[t].tags;for(var n in a){var o=a[n],i=$('<label class="radio-inline"></label>'),r=$('<input type="radio" name="tag_id" value="'+o.id+'">');i.append(r),i.append(" "+o.name),d.append(i)}}})}}})},PubNovel.prototype.run=function(){this.listenUploadFileEvent(),this.initUEditor(),this.listenSubmitEvent(),this.initCategory(),this.listenIsFreeEvent()},$(function(){(new PubNovel).run(),PubNovel.progressGroup=$("#progress-group"),PubNovel.progressBar=$(".progress-bar")});
//# sourceMappingURL=data:application/json;charset=utf8;base64,

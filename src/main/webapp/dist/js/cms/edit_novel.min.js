function EditNovel(){}EditNovel.prototype.listenUploadFileEvent=function(){$("#thumbnail-btn").change(function(){var e=$(this)[0].files[0],t=new FormData;t.append("file",e),myajax.post({url:"/cms/upload_file/",data:t,processData:!1,contentType:!1,success:function(e){var t;200===e.code&&(t=e.data.url,$("#cover_url-form").val(t))}})})},EditNovel.prototype.handleFileUploadProgress=function(e){var t=e.total.percent.toFixed(0)+"%";EditNovel.progressGroup.show();var i=EditNovel.progressBar;i.css("width",t),i.text(t)},EditNovel.prototype.handleFileUploadError=function(e){EditNovel.progressGroup.hide(),console.log(result.message)},EditNovel.prototype.handleFileUploadComplete=function(e){EditNovel.progressGroup.hide();var t="http://q0i4557d7.bkt.clouddn.com/"+e.key;$("input[name='thumbnail']").val(t)},EditNovel.prototype.listenQiniuUploadFileEvent=function(){var d=this;$("#thumbnail-btn").change(function(){var l=this.files[0];myajax.get({url:"/cms/qntoken/",success:function(e){var t,i,a,n,o,r;200===e.code&&(t=e.data.token,a={fname:i=(new Date).getTime()+"."+l.name.split(".")[1],params:{},mimeType:["image/png","image/jpeg","image/gif","video/mp4"]},n={useCdnDomain:!0,retryCount:6,region:qiniu.region.z1},o=qiniu.upload(l,i,t,a,n),r={next:d.handleFileUploadProgress,error:d.handleFileUploadError,complete:d.handleFileUploadComplete},o.subscribe(r))}})})},EditNovel.prototype.listenSubmitEvent=function(){$("#submit-btn").click(function(){event.preventDefault();var e=$(this).attr("data-novel-id"),t=$("input[name='name']").val(),i=$("input[name='cover_url']").val(),a=$("select[name='category_id']").val(),n=$('input[name="tag_id"]:checked').val(),o=$("input[name='price']").val(),r=window.ue.getContent();url="/cms/update_novel/",myajax.post({url:url,data:{name:t,cover_url:i,category_id:a,tag_id:n,profile:r,price:o,id:e},success:function(e){200===e.code?xfzalert.alertSuccess("恭喜，小说编辑成功！",function(){window.location="/cms/novel_list/"}):console.log(e)}})})},EditNovel.prototype.initCategory=function(){var p=$("#category-form"),s=(s=p.attr("data-category-id"))?parseInt(s):1,c=$(".radio-group"),u=(u=c.attr("data-tag-id"))&&parseInt(u);myajax.get({url:"/cms/get_cate_list/",success:function(e){if(200===e.code){var l=e.data.cate_list;for(var t in l){var i=l[t];s&&s===i.id?p.append('<option value="'+i.id+'" selected>'+i.name+"</option>"):p.append('<option value="'+i.id+'">'+i.name+"</option>")}for(var t in l)if(s===l[t].id){var a=l[t].tags;for(var n in a){var o=a[n],r=$('<label class="radio-inline"></label>'),d="",d=u&&u===o.id?$('<input type="radio" name="tag_id" value="'+o.id+'" checked>'):$('<input type="radio" name="tag_id" value="'+o.id+'">');r.append(d),r.append(" "+o.name),c.append(r)}break}p.change(function(){c.empty();var e=parseInt($(this).val());for(var t in l)if(e===l[t].id){var i=l[t].tags;for(var a in i){var n=i[a],o=$('<label class="radio-inline"></label>'),r=$('<input type="radio" name="tag_id" value="'+n.id+'">');o.append(r),o.append(" "+n.name),c.append(o)}}})}}})},EditNovel.prototype.initUEditor=function(){window.ue=UE.getEditor("editor",{initialFrameHeight:400,serverUrl:"/ueditor/upload/"})},EditNovel.prototype.listenIsFreeEvent=function(){var e=$("select[name='is_free']"),t=$("input[name='price']");"1"===e.val()&&t.show(),e.change(function(){"0"===$(this).val()?(t.val(0),t.hide()):"1"===$(this).val()&&(t.val(0),t.show())}),t.change(function(){0===$(this).val()&&(e.children().eq(0).prop("selected","selected"),$(this).hide())})},EditNovel.prototype.run=function(){this.initCategory(),this.listenUploadFileEvent(),this.initUEditor(),this.listenSubmitEvent(),this.listenIsFreeEvent()},$(function(){(new EditNovel).run(),EditNovel.progressGroup=$("#progress-group"),EditNovel.progressBar=$(".progress-bar")});
//# sourceMappingURL=data:application/json;charset=utf8;base64,

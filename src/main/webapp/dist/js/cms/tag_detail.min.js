function EditTag(){}EditTag.prototype.listenSubmitTagEvent=function(d,t){var i=this,a=d.find('input[name="name"]').val(),e=null,n=null,o={name:a};"edit"===t?(o.id=d.attr("data-tag-id"),e="/cms/edit_tag/",n="修改成功"):"add"===t&&(o.category_id=i.categoryId,e="/cms/add_tag/",n="添加成功"),myajax.post({url:e,data:o,success:function(t){var a,e;200===t.code&&(window.messageBox.showSuccess(n),a=template("tag-default",{tag:t.data.tag}),e=$($.parseHTML(jQuery.trim(a))),d.replaceWith(e),i.initDefaultNode(e))}})},EditTag.prototype.listenAddTagEvent=function(){var a=this,e=template("add-tag",{});$(".add-btn").click(function(){a.tbody.hasClass("tag-empty")&&(a.tbody.empty(),a.tbody.removeClass("tag-empty"));var t=$($.parseHTML(jQuery.trim(e)));a.initAddNode(t),a.tbody.prepend(t)})},EditTag.prototype.initDefaultNode=function(i){var n=this;i.find(".edit-btn").click(function(){var t=i.attr("data-tag-id");myajax.post({url:"/cms/get_tag/",data:{id:t},success:function(t){var a,e,d;200===t.code&&(a=t.data.tag,e=template("edit-tag",{tag:a}),d=$($.parseHTML(jQuery.trim(e))),n.initEditNode(d,i),i.replaceWith(d))}})}),i.find(".delete-btn").click(function(){var t=i.attr("data-tag-id");xfzalert.alertConfirm({text:"确定要删除“"+i.find(".tag").text()+"”标签吗？",confirmButtonText:"删除",confirmCallback:function(){myajax.post({url:"/cms/delete_tag/",data:{id:t},success:function(t){200===t.code&&(xfzalert.alertSuccessToast("删除成功"),0===n.tbody.children().length&&(n.tbody.append("<tr><td><h2>暂无标签</h2></td></tr>"),n.tbody.addClass("tag-empty")),setTimeout(function(){i.remove()},1e3))}})}})})},EditTag.prototype.initAddNode=function(t){var a=this;t.find(".add-cancel").click(function(){t.remove(),0===a.tbody.children().length&&(a.tbody.append("<tr><td><h2>暂无标签</h2></td></tr>"),a.tbody.addClass("tag-empty"))}),t.find(".add-submit").click(function(){a.listenSubmitTagEvent(t,"add")})},EditTag.prototype.initEditNode=function(t,a){var e=this;t.find(".edit-submit").click(function(){e.listenSubmitTagEvent(t,"edit")}),t.find(".edit-cancel").click(function(){e.initDefaultNode(a),t.replaceWith(a)})},EditTag.prototype.loadData=function(){var n=this;myajax.get({url:"/cms/get_tags/?category_id="+n.categoryId,success:function(t){if(200===t.code){for(var a=t.data.tags,e=0;e<a.length;e++){var d=template("tag-default",{tag:a[e]}),i=$($.parseHTML(jQuery.trim(d)));n.initDefaultNode(i),n.tbody.append(i)}0===a.length&&(n.tbody.append("<tr><td><h2>暂无标签</h2></td></tr>"),n.tbody.addClass("tag-empty"))}}})},EditTag.prototype.run=function(){this.tbody=$("tbody"),this.categoryId=this.tbody.attr("data-cate-id"),this.listenAddTagEvent(),this.loadData()},$(function(){(new EditTag).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
